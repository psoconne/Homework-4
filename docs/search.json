[
  {
    "objectID": "ST 558 - Homework 4.html",
    "href": "ST 558 - Homework 4.html",
    "title": "ST 558 - Homework 4",
    "section": "",
    "text": "What is the purpose of the lapply() function? What is the equivalent purrr function?\n\nThe lapply() function is used to apply a function to a list. The equivalent purrr function is map().\n\nSuppose we have a list called my_list. Each element of the list is a numeric data frame (all columns are numeric). We want use lapply() to run the code cor(numeric_matrix, method = \"kendall\") on each element of the list. Write code to do this below! (I’m really trying to ask you how you specify method = “kendall” when calling lapply())\n\nlapply(my_list, cor(numeric_matrix, method = \"kendall\"))\n\nWhat are two advantages of using purrr functions instead of the BaseR apply family?\n\nProvides a tidyverse alternative to the apply() family\nMain advantage is more consistency and some helper functions\n\nWhat is a side-effect function?\n\nA side-effect function doesn’t try to change the data, it just tries to produce something or change the state of something. An example would be the print() function.\n\nWhy can you name a variable sd in a function and not cause any issues with the sd function?\n\nYou can do that because when you call a function, it creates temporary function environments. This is why variables in functions don’t overwrite things."
  },
  {
    "objectID": "ST 558 - Homework 4.html#task-1-conceptual-questions",
    "href": "ST 558 - Homework 4.html#task-1-conceptual-questions",
    "title": "ST 558 - Homework 4",
    "section": "",
    "text": "What is the purpose of the lapply() function? What is the equivalent purrr function?\n\nThe lapply() function is used to apply a function to a list. The equivalent purrr function is map().\n\nSuppose we have a list called my_list. Each element of the list is a numeric data frame (all columns are numeric). We want use lapply() to run the code cor(numeric_matrix, method = \"kendall\") on each element of the list. Write code to do this below! (I’m really trying to ask you how you specify method = “kendall” when calling lapply())\n\nlapply(my_list, cor(numeric_matrix, method = \"kendall\"))\n\nWhat are two advantages of using purrr functions instead of the BaseR apply family?\n\nProvides a tidyverse alternative to the apply() family\nMain advantage is more consistency and some helper functions\n\nWhat is a side-effect function?\n\nA side-effect function doesn’t try to change the data, it just tries to produce something or change the state of something. An example would be the print() function.\n\nWhy can you name a variable sd in a function and not cause any issues with the sd function?\n\nYou can do that because when you call a function, it creates temporary function environments. This is why variables in functions don’t overwrite things."
  },
  {
    "objectID": "ST 558 - Homework 4.html#task-2---writing-r-functions",
    "href": "ST 558 - Homework 4.html#task-2---writing-r-functions",
    "title": "ST 558 - Homework 4",
    "section": "Task 2 - Writing R Functions",
    "text": "Task 2 - Writing R Functions\n\nQuestion 1\n\nWrite a basic function (call it getRMSE()) that takes in a vector of responses and a vector of predictions and outputs the RMSE.\n\n\ngetRMSE &lt;- function(responses, predictions, ...) {\n  square_diff &lt;- (responses - predictions)^2\n  mean_square_diff &lt;- mean(square_diff, ...)\n  rmse &lt;- sqrt(mean_square_diff)\n  return(rmse)\n}\n\n\n\nQuestion 2\n\nRun the following code to create some response values and predictions.\n\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10*x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\n\nTest your RMSE function using this data.\n\n\ngetRMSE(resp, pred)\n\n[1] 0.9581677\n\n\n\nRepeat after replacing two of the response values with missing values (NA_real_). Test your RMSE function with and without specifying the behavior to deal with missing values.\n\n\nresp_na &lt;- resp\nresp_na[c(10, 20)] &lt;- NA_real_\n\ngetRMSE(resp_na, pred)\n\n[1] NA\n\n\n\ngetRMSE(resp_na, pred, na.rm = TRUE)\n\n[1] 0.9562009\n\n\n\n\nQuestion 3\n\nWrite a function called getMAE() that follows the specifications of the getRMSE() function.\n\n\ngetMAE &lt;- function(responses, predictions, ...) {\n  abs_diff &lt;- abs(responses - predictions)\n  mae &lt;- mean(abs_diff, ...)\n  return(mae)\n}\n\n\n\nQuestion 4\n\nRun the following code to create some response values and predictions.\n\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10*x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\n\nTest your MAE function using this data.\n\n\ngetMAE(resp, pred)\n\n[1] 0.8155776\n\n\n\nRepeat after replacing two of the response values with missing values (NA_real_). Test your MAE function with and without specifying the behavior to deal with missing values.\n\n\nresp_na &lt;- resp\nresp_na[c(10, 20)] &lt;- NA_real_\n\ngetMAE(resp_na, pred)\n\n[1] NA\n\n\n\ngetMAE(resp_na, pred, na.rm = TRUE)\n\n[1] 0.81472\n\n\n\n\nQuestion 5\n\nLet’s create a wrapper function that can be used to get either or both metrics returned with a single function call. Do not rewrite your above two functions, call them inside the wrapper function (we would call the getRMSE() and getMAE() functions helper functions). When returning your values, give them appropriate names.\n\n\n\nThe function should check that two numeric (atomic) vectors have been passed (consider is.vector(), is.atomic(), and is.numeric()). If not, a message should print and the function should exit.\n\n\n\n\nThe function should return both metrics by default and include names. The behavior should be able to be changed using a character string of metrics to find.\n\n\n\ngetStats &lt;- function(responses, predictions, stats = c(\"RMSE\", \"MAE\"),...) {\n  # Check if inputs are numeric atomic vectors\n  if (!is.vector(responses) || !is.atomic(responses) || !is.numeric(responses) || \n        !is.vector(predictions) || !is.atomic(predictions) || !is.numeric(predictions)) {\n    stop(\"Input must be two vectors that are numeric and atomic\")\n  } else {\n      results &lt;- list()\n  \n      if (\"RMSE\" %in% stats) {\n        results$RMSE &lt;- getRMSE(responses, predictions, ...)\n      }\n      if (\"MAE\" %in% stats) {\n        results$MAE &lt;- getMAE(responses, predictions, ...)\n      }\n  \n      return(results)\n    }\n  }\n\n\n\nQuestion 6\n\nRun the following code to create some response values and predictions.\n\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10*x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\n\nTest your new function using this data. Call it once asking for each metric individually and once specifying both metrics\n\n\ngetStats(resp, pred, stats=\"RMSE\")\n\n$RMSE\n[1] 0.9581677\n\n\n\ngetStats(resp, pred, stats=\"MAE\")\n\n$MAE\n[1] 0.8155776\n\n\n\ngetStats(resp, pred)\n\n$RMSE\n[1] 0.9581677\n\n$MAE\n[1] 0.8155776\n\n\n\nRepeat with replacing two of the response values with missing values (NA_real_).\n\n\nresp_na &lt;- resp\nresp_na[c(10, 20)] &lt;- NA_real_\n\ngetStats(resp_na, pred)\n\n$RMSE\n[1] NA\n\n$MAE\n[1] NA\n\n\n\ngetStats(resp_na, pred, na.rm = TRUE)\n\n$RMSE\n[1] 0.9562009\n\n$MAE\n[1] 0.81472\n\n\n\nFinally, test your function by passing it incorrect data (i.e. a data frame or something else instead of vectors)\n\n\nresp_wrong &lt;- resp\nresp_wrong[c(10, 20)] &lt;- \"hello\"\n\ngetStats(resp_wrong, pred)\n\nError in getStats(resp_wrong, pred): Input must be two vectors that are numeric and atomic"
  },
  {
    "objectID": "ST 558 - Homework 4.html#task-3---querying-an-api-and-a-tidy-style-function",
    "href": "ST 558 - Homework 4.html#task-3---querying-an-api-and-a-tidy-style-function",
    "title": "ST 558 - Homework 4",
    "section": "Task 3 - Querying an API and a Tidy-Style Function",
    "text": "Task 3 - Querying an API and a Tidy-Style Function\n\nFor this section, you’ll connect to the news API here: newsapi.org. You’ll need to go to register for a key at that web site!\n\n\napi_key &lt;- \"3cfcdf6cd7af41459c6f4cb8f6492729\"\n\n\nQuestion 1\n\nUse GET() from the httr package to return information about a topic that you are interested in that has been in the news lately (store the result as an R object). Note: We can only look 30 days into the past with a free account.\n\n\nURL &lt;- paste0(\"https://newsapi.org/v2/everything?q=tesla&from=2024-06-10&apiKey=\", api_key)\n\nnews &lt;- httr::GET(URL)\n\nstr(news, max.level = 1)\n\nList of 10\n $ url        : chr \"https://newsapi.org/v2/everything?q=tesla&from=2024-06-10&apiKey=3cfcdf6cd7af41459c6f4cb8f6492729\"\n $ status_code: int 200\n $ headers    :List of 14\n  ..- attr(*, \"class\")= chr [1:2] \"insensitive\" \"list\"\n $ all_headers:List of 1\n $ cookies    :'data.frame':    0 obs. of  7 variables:\n $ content    : raw [1:79776] 7b 22 73 74 ...\n $ date       : POSIXct[1:1], format: \"2024-06-25 15:03:29\"\n $ times      : Named num [1:6] 0 0.00306 0.0215 0.04943 0.32047 ...\n  ..- attr(*, \"names\")= chr [1:6] \"redirect\" \"namelookup\" \"connect\" \"pretransfer\" ...\n $ request    :List of 7\n  ..- attr(*, \"class\")= chr \"request\"\n $ handle     :Class 'curl_handle' &lt;externalptr&gt; \n - attr(*, \"class\")= chr \"response\"\n\n\n\n\nQuestion 2\n\nParse what is returned and find your way to the data frame that has the actual article information in it (check content). Note the first column should be a list column!\n\n\nparsed &lt;- jsonlite::fromJSON(rawToChar(news$content))\nnews_info &lt;- tibble::as_tibble(parsed$articles)\nhead(news_info)\n\n# A tibble: 6 × 8\n  source$id $name  author title description url   urlToImage publishedAt content\n  &lt;chr&gt;     &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n1 wired     Wired  Aaria… Tesl… \"Elon Musk… http… https://m… 2024-06-13… \"Under…\n2 &lt;NA&gt;      [Remo… &lt;NA&gt;   [Rem… \"[Removed]\" http… &lt;NA&gt;       1970-01-01… \"[Remo…\n3 &lt;NA&gt;      [Remo… &lt;NA&gt;   [Rem… \"[Removed]\" http… &lt;NA&gt;       1970-01-01… \"[Remo…\n4 &lt;NA&gt;      [Remo… &lt;NA&gt;   [Rem… \"[Removed]\" http… &lt;NA&gt;       1970-01-01… \"[Remo…\n5 the-verge The V… Emma … Elon… \"Elon Musk… http… https://c… 2024-06-11… \"Elon …\n6 &lt;NA&gt;      ReadW… Suswa… Tesl… \"Tesla sha… http… https://r… 2024-06-14… \"Tesla…\n\n\n\n\nQuestion 3\n\nNow write a quick function that allows the user to easily query this API. The inputs to the function should be the title/subject to search for (string), a time period to search from (string - you’ll search from that time until the present), and an API key.\n\n\nNewsAPI &lt;- function(subject, date, api_key) {\n  url &lt;- paste0(\"https://newsapi.org/v2/everything?q=\", subject, \"&from=\", date, \"&apiKey=\", api_key)\n  \n  news_data &lt;- httr::GET(url)\n  \n  parsed &lt;- jsonlite::fromJSON(rawToChar(news_data$content))\n  news_info &lt;- tibble::as_tibble(parsed$articles)\n  return(news_info)\n}\n\n\nTest function\n\n\nwrapper_data &lt;- NewsAPI(\"tesla\", \"2024-06-10\", api_key)\nhead(wrapper_data)\n\n# A tibble: 6 × 8\n  source$id $name  author title description url   urlToImage publishedAt content\n  &lt;chr&gt;     &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n1 wired     Wired  Aaria… Tesl… \"Elon Musk… http… https://m… 2024-06-13… \"Under…\n2 &lt;NA&gt;      [Remo… &lt;NA&gt;   [Rem… \"[Removed]\" http… &lt;NA&gt;       1970-01-01… \"[Remo…\n3 &lt;NA&gt;      [Remo… &lt;NA&gt;   [Rem… \"[Removed]\" http… &lt;NA&gt;       1970-01-01… \"[Remo…\n4 &lt;NA&gt;      [Remo… &lt;NA&gt;   [Rem… \"[Removed]\" http… &lt;NA&gt;       1970-01-01… \"[Remo…\n5 the-verge The V… Emma … Elon… \"Elon Musk… http… https://c… 2024-06-11… \"Elon …\n6 &lt;NA&gt;      ReadW… Suswa… Tesl… \"Tesla sha… http… https://r… 2024-06-14… \"Tesla…\n\n\n\nwrapper_data_2 &lt;- NewsAPI(\"apple\", \"2024-05-30\", api_key)\nhead(wrapper_data_2)\n\n# A tibble: 6 × 8\n  source$id $name  author title description url   urlToImage publishedAt content\n  &lt;chr&gt;     &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n1 &lt;NA&gt;      [Remo… &lt;NA&gt;   [Rem… [Removed]   http… &lt;NA&gt;       1970-01-01… [Remov…\n2 &lt;NA&gt;      [Remo… &lt;NA&gt;   [Rem… [Removed]   http… &lt;NA&gt;       1970-01-01… [Remov…\n3 &lt;NA&gt;      Yahoo… Valen… WWDC… Today's ke… http… &lt;NA&gt;       2024-06-10… If you…\n4 &lt;NA&gt;      [Remo… &lt;NA&gt;   [Rem… [Removed]   http… &lt;NA&gt;       1970-01-01… [Remov…\n5 &lt;NA&gt;      [Remo… &lt;NA&gt;   [Rem… [Removed]   http… &lt;NA&gt;       1970-01-01… [Remov…\n6 &lt;NA&gt;      [Remo… &lt;NA&gt;   [Rem… [Removed]   http… &lt;NA&gt;       1970-01-01… [Remov…"
  }
]